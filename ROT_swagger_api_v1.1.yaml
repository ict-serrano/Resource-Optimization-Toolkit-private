openapi: 3.0.0
info:
  title: SERRANO - Resource Optimization Toolkit (ROT) API
  description: The API of the Resource Optimization Toolkit of the SERRANO platform.
  version: 1.1.0

paths:
  /api/v1/rot/executions:
    get:
      tags:
        - ROT
      summary: Get the list of all active executions.
      description: 'Operation to retrieve the list of all active executions'
      responses:
        '200':
          description: Success Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/executions'
        '503':
          description: Service Unavaible.

  /api/v1/rot/execution:
    post:
      tags:
        - ROT
      summary: Start the execution of some specific algorithm with the requested input parameters.
      description: 'Operation to start the execution of some specific algorithm'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - execution_plugin
                - parameters
              properties:
                execution_plugin:
                  type: string
                parameters:
                  type: object
            example:
              execution_plugin: SimpleMatch
              parameters: {}
        
      responses:
        '201':
          description: Execution Request Successfully Submitted.
        '503':
          description: Service Unavaible.
  
  /api/v1/rot/execution/{uuid}:
    delete:
      tags:
        - ROT
      summary: Terminate a specific algorithm execution.
      description: 'Operation to terminate a specific algorithm execution'
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Termination Request Successfully Submitted.
        '503':
          description: Service Unavaible.
    get:
      tags:
        - ROT
      summary: Get the details of a specific algorithm execution.
      description: 'Operation to retrieve detauks of a specific execution'
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/execution'
        '503':
          description: Service Unavaible.
    
  /api/v1/rot/statistics:
    get:
      tags:
        - ROT
      summary: Get statistics for the completed executions.
      description: 'Operation to retrieve statistics for the completed executions'
      parameters:
        - name: start
          in: query
          description: Timestamp specifying the starting point of the data to be returned.
          required: false
          allowEmptyValue: false
          schema:
            type: integer
        - name: end
          in: query
          description: Timestamp specifying the ending point of the data to be returned.
          required: false
          allowEmptyValue: false
          schema:
            type: integer
      responses:
        '200':
          description: Success Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statistics'
        '503':
          description: Service Unavaible.
          
  /api/v1/rot/engines:
    get:
      tags:
        - ROT
      summary: Get the available execution engines.
      description: 'Operation to retrieve the available execution engines'
      responses:
        '200':
          description: Success Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engines'
        '503':
          description: Service Unavaible.
          
  /api/v1/rot/engine/{uuid}:
    get:
      tags:
        - ROT
      summary: Get details about a specific execution engine.
      description: 'Operation to retrieve details for a specific execution engine'
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine'
        '503':
          description: Service Unavaible.
   
  /api/v1/rot/logs/{uuid}:
    get:
      tags:
        - ROT
      summary: Get detailed logging information for a specific algorithm execution.
      description: 'Operation to retrieve detailed information for a specific execution'
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logs'
        '503':
          description: Service Unavaible.

  /api/v1/rot/users:
    get:
      tags:
        - ROT
      summary: Get details about the registered users.
      description: 'Operation to retrieve detailed information for the registered users - Only superusers can execute this opertion'
      responses:
        '200':
          description: Success Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        '503':
          description: Service Unavaible.

  /api/v1/rot/user:
    post:
      tags:
        - ROT
      summary: Register a new user.
      description: 'Operation to register a new user - Only superusers can execute this opertion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - superuser
              properties:
                username:
                  type: string
                password:
                  type: string
                superuser:
                  type: integer
            example:
              username: some_username
              password: some_password
              superuser: 0
        
      responses:
        '201':
          description: Execution Request Successfully Submitted.
        '503':
          description: Service Unavaible.
  

  /api/v1/rot/user/{uuid}:
    delete:
        tags:
          - ROT
        summary: Delete a specific user.
        description: 'Operation to delete a specific user - Only superusers can execute this opertion'
        parameters:
          - name: uuid
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Termination Request Successfully Submitted.
          '503':
            description: Service Unavaible.

components:
  schemas:
    executions:
      type: object
      properties:
        executions:
          type: array
          items:
            type: object
            properties:
              execution_id:
                type: string
                example: eb7d5663-50ca-486f-9802-3cb4f08af40d
              engine_id:
                type: string
                example: 6218118f-748d-42ad-b2f2-65e6332435ac
              results:
                type: string
                example: ""
              status:
                type: number
                example: 2
              create_at:
                type: number
                example: 1652958784
              updated_at:
                type: number
                example: 1652958784
    execution:
      type: object
      properties:
        execution_id:
          type: string
          example: eb7d5663-50ca-486f-9802-3cb4f08af40d
        engine_id:
          type: string
          example: 6218118f-748d-42ad-b2f2-65e6332435ac
        results:
          type: string
          example: ""
        status:
          type: number
          example: 2
        create_at:
          type: number
          example: 1652958784
        updated_at:
          type: number
          example: 1652958784
    engines:
      type: object
      properties:
        engines:
          type: array
          items:
            type: string
            format: uuid
          example: ["7ebef019-1894-4fb0-8ee6-2dd8a096171e", "6218118f-748d-42ad-b2f2-65e6332435ac"]
    engine:
      type: object
      properties:
        engine_id:
          type: string
          format: uuid
          example: 6218118f-748d-42ad-b2f2-65e6332435ac
        hostname:
          type: string
          example: "hscnl-140"
        uptime:
          type: number
          example: 1032712
        total_executions:
          type: number
          example: 16
        failed_executions:
          type: number
          example: 1
        active_executions:
          type: number
          example: 0
    statistics:
      type: object
      properties:
        completed_executions:
          type: integer
          example: 10
        failed_executions:
          type: integer
          example: 1
        avg_exec_time:
          type: integer
          example: 0.5
        number_of_engines:
          type: integer
          example: 2
    logs:
      type: object
      properties:
        log_details:
          type: array
          items:
            type: object
            properties:
              log_src:
                type: string
                example: Dispatcher
              log_entry:
                type: string
                example: Assigned to engine_id 6218118f-748d-42ad-b2f2-65e6332435ac
              create_at:
                type: number
                example: 1653054076
    users:
      type: object
      properties:
          users:
            type: array
            items:
              type: object
              properties:
                username:
                  type: string
                  example: user1
                client_uuid:
                  type: string
                  format: uuid
                  example: "7ebef019-1894-4fb0-8ee6-2dd8a096171e"
                superuser:
                  type: number
                  example: 0

  
      